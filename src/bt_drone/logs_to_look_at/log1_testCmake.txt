Start testing: Jan 21 10:22 CET
----------------------------------------------------------
1/5 Testing: WaypointTest.TestingTest
1/5 Test: WaypointTest.TestingTest
Command: "/home/frida/idk_anymore/build/bt_drone/wp_test" "--gtest_filter=WaypointTest.TestingTest" "--gtest_also_run_disabled_tests"
Directory: /home/frida/idk_anymore/build/bt_drone
"WaypointTest.TestingTest" start time: Jan 21 10:22 CET
Output:
----------------------------------------------------------
Note: Google Test filter = WaypointTest.TestingTest
[==========] Running 1 test from 1 test suite.
[----------] Global test environment set-up.
[----------] 1 test from WaypointTest
[ RUN      ] WaypointTest.TestingTest
[       OK ] WaypointTest.TestingTest (0 ms)
[----------] 1 test from WaypointTest (0 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test suite ran. (0 ms total)
[  PASSED  ] 1 test.
<end of output>
Test time =   0.00 sec
----------------------------------------------------------
Test Passed.
"WaypointTest.TestingTest" end time: Jan 21 10:22 CET
"WaypointTest.TestingTest" time elapsed: 00:00:00
----------------------------------------------------------

2/5 Testing: cppcheck
2/5 Test: cppcheck
Command: "/usr/bin/python3" "-u" "/opt/ros/humble/share/ament_cmake_test/cmake/run_test.py" "/home/frida/idk_anymore/build/bt_drone/test_results/bt_drone/cppcheck.xunit.xml" "--package-name" "bt_drone" "--output-file" "/home/frida/idk_anymore/build/bt_drone/ament_cppcheck/cppcheck.txt" "--command" "/opt/ros/humble/bin/ament_cppcheck" "--xunit-file" "/home/frida/idk_anymore/build/bt_drone/test_results/bt_drone/cppcheck.xunit.xml" "--include_dirs" "/home/frida/idk_anymore/src/bt_drone/include"
Directory: /home/frida/idk_anymore/src/bt_drone
"cppcheck" start time: Jan 21 10:22 CET
Output:
----------------------------------------------------------
-- run_test.py: invoking following command in '/home/frida/idk_anymore/src/bt_drone':
 - /opt/ros/humble/bin/ament_cppcheck --xunit-file /home/frida/idk_anymore/build/bt_drone/test_results/bt_drone/cppcheck.xunit.xml --include_dirs /home/frida/idk_anymore/src/bt_drone/include
cppcheck 2.7 has known performance issues and therefore will not be used, set the AMENT_CPPCHECK_ALLOW_SLOW_VERSIONS environment variable to override this.
-- run_test.py: return code 0
-- run_test.py: verify result file '/home/frida/idk_anymore/build/bt_drone/test_results/bt_drone/cppcheck.xunit.xml'
<end of output>
Test time =   0.13 sec
----------------------------------------------------------
Test Passed.
"cppcheck" end time: Jan 21 10:22 CET
"cppcheck" time elapsed: 00:00:00
----------------------------------------------------------

3/5 Testing: lint_cmake
3/5 Test: lint_cmake
Command: "/usr/bin/python3" "-u" "/opt/ros/humble/share/ament_cmake_test/cmake/run_test.py" "/home/frida/idk_anymore/build/bt_drone/test_results/bt_drone/lint_cmake.xunit.xml" "--package-name" "bt_drone" "--output-file" "/home/frida/idk_anymore/build/bt_drone/ament_lint_cmake/lint_cmake.txt" "--command" "/opt/ros/humble/bin/ament_lint_cmake" "--xunit-file" "/home/frida/idk_anymore/build/bt_drone/test_results/bt_drone/lint_cmake.xunit.xml"
Directory: /home/frida/idk_anymore/src/bt_drone
"lint_cmake" start time: Jan 21 10:22 CET
Output:
----------------------------------------------------------
-- run_test.py: invoking following command in '/home/frida/idk_anymore/src/bt_drone':
 - /opt/ros/humble/bin/ament_lint_cmake --xunit-file /home/frida/idk_anymore/build/bt_drone/test_results/bt_drone/lint_cmake.xunit.xml
CMakeLists.txt:13: Do not use mixed case commands [readability/wonkycase]
CMakeLists.txt:19: Do not use mixed case commands [readability/wonkycase]
CMakeLists.txt:54: Line ends in whitespace [whitespace/eol]
CMakeLists.txt:73: Line ends in whitespace [whitespace/eol]
CMakeLists.txt:91: Line ends in whitespace [whitespace/eol]


5 errors
-- run_test.py: return code 1
-- run_test.py: verify result file '/home/frida/idk_anymore/build/bt_drone/test_results/bt_drone/lint_cmake.xunit.xml'
<end of output>
Test time =   0.12 sec
----------------------------------------------------------
Test Failed.
"lint_cmake" end time: Jan 21 10:22 CET
"lint_cmake" time elapsed: 00:00:00
----------------------------------------------------------

4/5 Testing: uncrustify
4/5 Test: uncrustify
Command: "/usr/bin/python3" "-u" "/opt/ros/humble/share/ament_cmake_test/cmake/run_test.py" "/home/frida/idk_anymore/build/bt_drone/test_results/bt_drone/uncrustify.xunit.xml" "--package-name" "bt_drone" "--output-file" "/home/frida/idk_anymore/build/bt_drone/ament_uncrustify/uncrustify.txt" "--command" "/opt/ros/humble/bin/ament_uncrustify" "--xunit-file" "/home/frida/idk_anymore/build/bt_drone/test_results/bt_drone/uncrustify.xunit.xml"
Directory: /home/frida/idk_anymore/src/bt_drone
"uncrustify" start time: Jan 21 10:22 CET
Output:
----------------------------------------------------------
-- run_test.py: invoking following command in '/home/frida/idk_anymore/src/bt_drone':
 - /opt/ros/humble/bin/ament_uncrustify --xunit-file /home/frida/idk_anymore/build/bt_drone/test_results/bt_drone/uncrustify.xunit.xml
Code style divergence in file 'include/bt_drone/battery_check.hpp':

--- include/bt_drone/battery_check.hpp
+++ include/bt_drone/battery_check.hpp.uncrustify
@@ -10 +10,3 @@
-    BatteryCheck(const std::string& name, const BT::NodeConfig& conf, const BT::RosNodeParams& params);
+  BatteryCheck(
+    const std::string & name, const BT::NodeConfig & conf,
+    const BT::RosNodeParams & params);
@@ -12 +14 @@
-    static BT::PortsList providedPorts();
+  static BT::PortsList providedPorts();
@@ -14,2 +16,2 @@
-    BT::NodeStatus onTick( const std::shared_ptr<sensor_msgs::msg::BatteryState>& last_msg) override;
-};
+  BT::NodeStatus onTick(const std::shared_ptr<sensor_msgs::msg::BatteryState> & last_msg) override;
+};

Code style divergence in file 'include/bt_drone/pose2d.hpp':

--- include/bt_drone/pose2d.hpp
+++ include/bt_drone/pose2d.hpp.uncrustify
@@ -1 +1,2 @@
-struct Pose2D {
+struct Pose2D
+{
@@ -3,3 +4,3 @@
-    double x = 0;
-    double y = 0;
-    double theta = 0;
+  double x = 0;
+  double y = 0;
+  double theta = 0;
@@ -7 +8 @@
-};
+};

Code style divergence in file 'include/bt_drone/waypoint_gen.hpp':

--- include/bt_drone/waypoint_gen.hpp
+++ include/bt_drone/waypoint_gen.hpp.uncrustify
@@ -11 +11 @@
-    GenerateWaypoints(const std::string& name, const BT::NodeConfig& config);
+  GenerateWaypoints(const std::string & name, const BT::NodeConfig & config);
@@ -13 +13 @@
-    static BT::PortsList providedPorts();
+  static BT::PortsList providedPorts();
@@ -15 +15 @@
-    BT::NodeStatus tick() override;
+  BT::NodeStatus tick() override;
@@ -18,6 +18,6 @@
-    rclcpp::Node::SharedPtr node_;
-    rclcpp::Subscription<geometry_msgs::msg::Pose>::SharedPtr subscription_;
-    Pose2D current_pose;
-    bool pos_recived = false;
-    BT::SharedQueue<Pose2D> generateWaypoits(const Pose2D& start, const Pose2D& target);
-};
+  rclcpp::Node::SharedPtr node_;
+  rclcpp::Subscription<geometry_msgs::msg::Pose>::SharedPtr subscription_;
+  Pose2D current_pose;
+  bool pos_recived = false;
+  BT::SharedQueue<Pose2D> generateWaypoits(const Pose2D & start, const Pose2D & target);
+};

Code style divergence in file 'src/battery_check.cpp':

--- src/battery_check.cpp
+++ src/battery_check.cpp.uncrustify
@@ -4,2 +4,4 @@
-BatteryCheck::BatteryCheck(const std::string& name, const BT::NodeConfig& conf, const BT::RosNodeParams& params)
-    : RosTopicSubNode<sensor_msgs::msg::BatteryState>(name, conf,params)
+BatteryCheck::BatteryCheck(
+  const std::string & name, const BT::NodeConfig & conf,
+  const BT::RosNodeParams & params)
+: RosTopicSubNode<sensor_msgs::msg::BatteryState>(name, conf, params)
@@ -10 +12 @@
-    return {BT::InputPort<float>("threshold", 20.0, "Battery Threshold")};
+  return {BT::InputPort<float>("threshold", 20.0, "Battery Threshold")};
@@ -13 +15,2 @@
-BT::NodeStatus BatteryCheck::onTick( const std::shared_ptr<sensor_msgs::msg::BatteryState>& last_msg)
+BT::NodeStatus BatteryCheck::onTick(
+  const std::shared_ptr<sensor_msgs::msg::BatteryState> & last_msg)
@@ -15,12 +18,10 @@
-    float threshold;
-    if (!getInput("threshold", threshold))
-    {
-        throw BT::RuntimeError("Missing input [Threshold]");
-    }
-    if (last_msg->percentage < threshold)   
-    {
-        return BT::NodeStatus::FAILURE;
-    }
-    return BT::NodeStatus::SUCCESS;
-    
-}
+  float threshold;
+  if (!getInput("threshold", threshold)) {
+    throw BT::RuntimeError("Missing input [Threshold]");
+  }
+  if (last_msg->percentage < threshold) {
+    return BT::NodeStatus::FAILURE;
+  }
+  return BT::NodeStatus::SUCCESS;
+
+}

Code style divergence in file 'src/waypoint_gen.cpp':

--- src/waypoint_gen.cpp
+++ src/waypoint_gen.cpp.uncrustify
@@ -8,2 +8,2 @@
-GenerateWaypoints::GenerateWaypoints(const std::string& name, const BT::NodeConfig& config)
-    : SyncActionNode(name, config)
+GenerateWaypoints::GenerateWaypoints(const std::string & name, const BT::NodeConfig & config)
+: SyncActionNode(name, config)
@@ -11,12 +11,12 @@
-    //Sub to NavSatFix
-    node_ = rclcpp::Node::make_shared("waypoint_gen_node");
-    subscription_ = node_->create_subscription<geometry_msgs::msg::Pose>(
-        "drone/gps/fix", 10,
-        [this](const geometry_msgs::msg::Pose msg)
-        {
-            current_pose.x = msg.position.x;
-            current_pose.y = msg.position.y;
-            current_pose.theta = tf2::getYaw(msg.orientation);
-            pos_recived = true;
-        }
-    );
+  //Sub to NavSatFix
+  node_ = rclcpp::Node::make_shared("waypoint_gen_node");
+  subscription_ = node_->create_subscription<geometry_msgs::msg::Pose>(
+    "drone/gps/fix", 10,
+    [this](const geometry_msgs::msg::Pose msg)
+    {
+      current_pose.x = msg.position.x;
+      current_pose.y = msg.position.y;
+      current_pose.theta = tf2::getYaw(msg.orientation);
+      pos_recived = true;
+    }
+  );
@@ -27,2 +27,2 @@
-    return { BT::OutputPort<BT::SharedQueue<Pose2D>>("waypoints"),
-             BT::InputPort<Pose2D>("target_position") };
+  return {BT::OutputPort<BT::SharedQueue<Pose2D>>("waypoints"),
+    BT::InputPort<Pose2D>("target_position")};
@@ -33,11 +33,9 @@
-    if (!pos_recived)
-    {
-        RCLCPP_WARN(node_->get_logger(), "Waiting for current position");
-        return BT::NodeStatus::FAILURE;
-    }
-    Pose2D target_position;
-    if(!getInput("target_position", target_position))
-    {
-        RCLCPP_WARN(node_->get_logger(), "Missing target position");
-        return BT::NodeStatus::FAILURE;
-    }
+  if (!pos_recived) {
+    RCLCPP_WARN(node_->get_logger(), "Waiting for current position");
+    return BT::NodeStatus::FAILURE;
+  }
+  Pose2D target_position;
+  if (!getInput("target_position", target_position)) {
+    RCLCPP_WARN(node_->get_logger(), "Missing target position");
+    return BT::NodeStatus::FAILURE;
+  }
@@ -45,2 +43,2 @@
-    auto waypoints = generateWaypoits(current_pose, target_position);
-    setOutput("waypoints", waypoints);
+  auto waypoints = generateWaypoits(current_pose, target_position);
+  setOutput("waypoints", waypoints);
@@ -48 +46 @@
-    return BT::NodeStatus::SUCCESS;
+  return BT::NodeStatus::SUCCESS;
@@ -51 +49,3 @@
-BT::SharedQueue<Pose2D> GenerateWaypoints::generateWaypoits(const Pose2D& start, const Pose2D& target)
+BT::SharedQueue<Pose2D> GenerateWaypoints::generateWaypoits(
+  const Pose2D & start,
+  const Pose2D & target)
@@ -53,2 +53,2 @@
-    //Make waypoints (1 every 2m)
-    auto waypoints = std::make_shared<std::deque<Pose2D>>();
+  //Make waypoints (1 every 2m)
+  auto waypoints = std::make_shared<std::deque<Pose2D>>();
@@ -56,11 +56,5 @@
-    //Find nr waypoints
-    double step_size = 1.5;
-    double distance = std::sqrt(((target.x - start.x)*2)+((target.y - start.y)*2));
-    int num = static_cast<int>(distance/step_size);
-    double waypoint_theta = std::atan2((target.y-start.y),(target.x-start.x));
-    
-    //Make waypoints 
-    for (int i = 0; i < num; i++)
-    {
-        double waypoint_x = start.x + i * step_size * std::cos(waypoint_theta);
-        double waypoint_y = start.y + i * step_size * std::cos(waypoint_theta);
+  //Find nr waypoints
+  double step_size = 1.5;
+  double distance = std::sqrt(((target.x - start.x) * 2) + ((target.y - start.y) * 2));
+  int num = static_cast<int>(distance / step_size);
+  double waypoint_theta = std::atan2((target.y - start.y), (target.x - start.x));
@@ -68,7 +62,12 @@
-        waypoints->push_back(Pose2D{waypoint_x, waypoint_y, waypoint_theta});
-        
-    }
-    waypoints->push_back(Pose2D{target.x, target.y, waypoint_theta});
-    return waypoints;
-    
-}
+  //Make waypoints
+  for (int i = 0; i < num; i++) {
+    double waypoint_x = start.x + i * step_size * std::cos(waypoint_theta);
+    double waypoint_y = start.y + i * step_size * std::cos(waypoint_theta);
+
+    waypoints->push_back(Pose2D{waypoint_x, waypoint_y, waypoint_theta});
+
+  }
+  waypoints->push_back(Pose2D{target.x, target.y, waypoint_theta});
+  return waypoints;
+
+}

Code style divergence in file 'tests/wp_test.cpp':

--- tests/wp_test.cpp
+++ tests/wp_test.cpp.uncrustify
@@ -9,3 +9,4 @@
-class WaypointTest : public testing::Test {
-  protected:
-    int test = 1;
+class WaypointTest : public testing::Test
+{
+protected:
+  int test = 1;
@@ -18 +19,2 @@
-int main(int argc, char **argv) {
+int main(int argc, char ** argv)
+{
@@ -72 +74 @@
-  
+
@@ -88 +90 @@
-// }
+// }

6 files with code style divergence
-- run_test.py: return code 1
-- run_test.py: verify result file '/home/frida/idk_anymore/build/bt_drone/test_results/bt_drone/uncrustify.xunit.xml'
<end of output>
Test time =   0.13 sec
----------------------------------------------------------
Test Failed.
"uncrustify" end time: Jan 21 10:22 CET
"uncrustify" time elapsed: 00:00:00
----------------------------------------------------------

5/5 Testing: xmllint
5/5 Test: xmllint
Command: "/usr/bin/python3" "-u" "/opt/ros/humble/share/ament_cmake_test/cmake/run_test.py" "/home/frida/idk_anymore/build/bt_drone/test_results/bt_drone/xmllint.xunit.xml" "--package-name" "bt_drone" "--output-file" "/home/frida/idk_anymore/build/bt_drone/ament_xmllint/xmllint.txt" "--command" "/opt/ros/humble/bin/ament_xmllint" "--xunit-file" "/home/frida/idk_anymore/build/bt_drone/test_results/bt_drone/xmllint.xunit.xml"
Directory: /home/frida/idk_anymore/src/bt_drone
"xmllint" start time: Jan 21 10:22 CET
Output:
----------------------------------------------------------
-- run_test.py: invoking following command in '/home/frida/idk_anymore/src/bt_drone':
 - /opt/ros/humble/bin/ament_xmllint --xunit-file /home/frida/idk_anymore/build/bt_drone/test_results/bt_drone/xmllint.xunit.xml
File 'package.xml' is valid

No problems found
-- run_test.py: return code 0
-- run_test.py: verify result file '/home/frida/idk_anymore/build/bt_drone/test_results/bt_drone/xmllint.xunit.xml'
<end of output>
Test time =   0.79 sec
----------------------------------------------------------
Test Passed.
"xmllint" end time: Jan 21 10:22 CET
"xmllint" time elapsed: 00:00:00
----------------------------------------------------------

End testing: Jan 21 10:22 CET

cppcheck =   0.13 sec*proc

lint_cmake =   0.12 sec*proc

linter =   1.17 sec*proc

uncrustify =   0.13 sec*proc

xmllint =   0.79 sec*proc

